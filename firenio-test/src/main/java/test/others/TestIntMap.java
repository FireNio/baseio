/*
 * Copyright 2015 The FireNio Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package test.others;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

import org.junit.Before;
import org.junit.Test;

import com.firenio.common.Assert;
import com.firenio.log.Logger;
import com.firenio.log.LoggerFactory;
import test.backup.IntMap;

/**
 * @author wangkai
 */
public class TestIntMap {

    static {
        LoggerFactory.setEnableSLF4JLogger(false);
    }

    Logger logger = LoggerFactory.getLogger(TestIntMap.class);

    int             cap  = 1000;
    IntMap<Integer> map  = new IntMap<>(16);
    List<Integer>   list = new ArrayList<>(16);

    @Before
    public void before() {
        list = newDataList();
        for (Integer i : list) {
            map.put(i, i);
        }
        logger.info("size: " + list.size());
        logger.info("list: " + list);
    }

    List<Integer> newDataList() {
        boolean random = true;
        if (random) {
            Random        r    = new Random();
            List<Integer> list = new ArrayList<>(cap);
            for (int i = 0; i < cap; i++) {
                int k = r.nextInt(2000);
                if (list.contains(k)) {
                    i--;
                    continue;
                }
                list.add(k);
            }
            return list;
        } else {
            Integer[]     data = new Integer[]{1817709497, 1020619099, 1759681358, 941541627, 62623315, 508772680, 1298922045, 1361284904, 1807787055, 1736261043, 1533483009, 2069766034, 1175456478, 1493485670, 2145530210, 624325508, 1352607519, 1627640025, 271562923, 277362065, 1285593433, 951112590, 18895618, 327371137, 267540549, 1166392586, 1056315609, 1547479254, 1797755816, 872923760, 1527655293, 1021066745, 1118748990, 954591675, 364696012, 1882523654, 502814131, 411409303, 1630105091, 702509361, 1107872714, 955267293, 272285365, 239231443, 766032801, 1678396841, 1207499992, 1962293781, 1586488331, 128752666, 2035452154, 2067102775, 211036189, 272685222, 1980299665, 927043966, 137601733, 1283953175, 1624734831, 626963384, 1826689683, 332029734, 465608020, 703636845, 124518299, 1519717298, 1996530590, 183665316, 1506942323, 113385373, 411228443, 1075745871, 1440582488, 768784708, 705375231, 692039764, 1330361453, 365909401, 816496113, 66342968, 921874979, 686735326, 296555071, 239347818, 1586967220, 1083835135, 420785459, 1013688874, 1728251336, 1756878477, 655955581, 1791851028, 1737265467, 1175953747, 1644515535, 1336968525, 297897974, 570149783, 2138372232, 1005715272, 1231789306, 449100526, 1415535496, 2025665078, 1053502587, 1916367292, 969079842, 1330621448, 785233193, 1384148040, 1631129903, 1030681122, 88992649, 1395324280, 274707775, 102598045, 1010372994, 157207853, 1426233067, 485466681, 501382132, 2093849149, 22355014, 1337770462, 1895731331, 208093705, 344853362, 754028237, 1406180722, 1898700731, 1206118990, 1561759336, 1982533033, 1288942878, 1131046733, 1322938010, 1696045785, 818876186, 1824800098, 179535844, 1735737270, 101038026, 1344414999, 1285195269, 313773155, 777859132, 29263037, 1880729926, 1446059756, 1879477188, 68071870, 126677599, 2025464300, 59270909, 811447566, 1738431241, 1584517967, 1577522270, 1502717120, 1918770465, 1073919282, 689223796, 446416053, 980978294, 581118695, 1106554817, 77906031, 1368741679, 1497064468, 123287601, 663318531, 1770053852, 1644402683, 1004009525, 1188149805, 889101335, 861631188, 474062207, 890389886, 1269592790, 579319638, 491941208, 1489160880, 1188134225, 1167144532, 796213409, 1260255770, 1877942154, 248536708, 523240804, 1757218366, 1813132670, 1323484764, 484999190, 1399850368, 1490196454, 888943126, 1889642091, 1718975730, 1145693098, 1541060562, 566070742, 80119370, 1152323043, 1128121305, 1163233180, 298984181, 1565716107, 1958338303, 1324983444, 517566020, 1175620548, 859781411, 423787133, 55017669, 1788252097, 1288116689, 1362339068, 1207629485, 1954804565, 226261254, 110828592, 698624880, 2109245206, 1702240787, 469834483, 1413110899, 1986962733, 165470874, 1140715184, 37422297, 558757309, 1446930357, 998681308, 2030691450, 295948270, 1391823671, 781670931, 494748658, 1289511317, 1276834570, 372303567, 1871259605, 1350461314, 360514743, 629839303, 1396000000, 1946017893, 1506561797, 1144687586, 1253353483, 509002845, 1301916600, 1905686998, 1588797914, 1898408735, 1544911738, 1380263778, 1306241875, 110291647, 1876131288, 2106275876, 1952191018, 1060002078, 55371619, 1206461463, 1524457687, 2118154737, 462583799, 1103494573, 1059951529, 1531577193, 96105240, 583155589, 516836596, 1355105156, 2033351800, 1988590538, 367352422, 1139707888, 341539477, 572352295, 1992752504, 1825802903, 1037418879, 1721391466, 480184576, 1467868364, 1707468727, 1057815988, 498927075, 1735322384, 188663603, 358517850, 1893249255, 1483457408, 151211135, 4753500, 258425766, 393144543, 35313149, 1492032128, 1794054814, 319949884, 878511437, 14468106, 726559334, 747382592, 1631978695, 179553049, 1900205563, 202516758, 1781687077, 2085692065, 105568313, 430262263, 1957807934, 106827776, 1314329189, 1019257169, 403824109, 42446911, 2144383463, 310932115, 1656161296, 1490374376, 1952136981, 901239959, 1114525356, 423387263, 462112554, 976126893, 381465390, 1045951134, 363885397, 105832000, 1634283980, 145277872, 1323876078, 1861542952, 473695242, 1620892746, 2065407683, 38903947, 1229648217, 1550918689, 1700203409, 1728252016, 894110682, 728566956, 91586958, 1844901858, 1398945600, 1101007703, 1427318563, 128489405, 1408695251, 130694496, 1372155063, 984749592, 2049132432, 1578446674, 1502320551, 253836111, 1574362990, 1532453404, 66308690, 1444677035, 1031824059, 91015118, 1735867216, 1221268912, 1163911845, 1264062959, 1290890690, 382883076, 1788096469, 1258572669, 299982020, 410837495, 212082742, 2017187970, 1462807551, 298314163, 1272393428, 1617007951, 1049366364, 843627265, 826603487, 810184536, 1549089747, 354745269, 1429811918, 1927377323, 321508193, 1352174264, 1367469216, 1973804814, 1157619224, 745748656, 295167037, 1395823541, 1410302544, 724640078, 242027259, 628590749, 1414188539, 1819479859, 1831553854, 482472584, 2065175, 1447621760, 1198380855, 331159189, 97253692, 1402413561, 1923178957, 1390251643, 1288652373, 159352532, 1197196184, 147478114, 1846411371, 1321394980, 784444937, 2096275038, 1078463133, 455243485, 1536765608, 993327496, 445710124, 1753831299, 814867574, 854336699, 113502387, 1020081780, 297265521, 578764520, 528751731, 1405682126, 34902582, 1180101911, 1130899404, 990931454, 5260736, 1417053179, 914940616, 1629615590, 2145046350, 1150284080, 66968018, 711847850, 198421603, 148553235, 183591044, 23270424, 599914727, 1910646334, 705281950, 144084657, 138656619, 1552145310, 218763282, 1034644568, 693531530, 353940019, 182744379, 1769361046, 1826024555, 2128219492, 1730185262, 144492936, 1752462690, 1990887677, 999548457, 1279030886, 112444086, 437647302, 1947726889, 2057069744, 1558173821, 1447326145, 1950812568, 757871607, 873169316, 6147071, 1618760738, 1841217605, 262927627, 1293317151, 846522024, 1436740394, 821914317, 1970555236, 1814398286, 77310820, 2037154717, 451521906, 1069539503, 1281436970, 1674282060, 1313777317, 328929840, 1910992149, 2051573607, 933465614, 115231602, 482564011, 1577707260, 361128716, 1032440545, 1431181194, 791167101, 846954114, 652822377, 1949752366, 1955697854, 1832648634, 1639720265, 883819359, 962012697, 1808264406, 9627135, 1373187898, 1612699313, 77570286, 2082891107, 2137944793, 1239251, 233292235, 132421072, 885874594, 1286284152, 687118143, 2142735741, 609180969, 161512679, 1433222687, 2017908457, 1517639107, 362188151, 1065668831, 1639978613, 279929256, 1134570610, 944717768, 531838731, 911981251, 688699670, 1335440088, 1071607804, 1927602970, 1887023541, 1334177590, 1360106984, 1513850837, 753621756, 824957520, 260655318, 1340558061, 1910069584, 236442771, 752988516, 87178610, 63454804, 1990804934, 928227096, 1730507896, 1314335879, 1279022340, 1383201236, 97108639, 951636747, 1035298388, 1734252648, 2114338878, 444670848, 2094569446, 855944770, 52882476, 614810639, 1015650541, 2135368256, 2133872426, 1537302403, 121361427, 727990438, 508144624, 1343231377, 522225565, 1295342123, 1616242131, 213478712, 916456733, 931660334, 753657871, 677071683, 419754702, 1924644358, 2078406583, 608931564, 2090076303, 118101879, 338426422, 397678235, 1983406719, 1094460480, 2055428737, 1403719372, 1662264113, 1884271824, 30398171, 1793985806, 1866907532, 1763146777, 187900228, 917281063, 2125852226, 996450942, 1871567999, 817292885, 305911019, 1663915494, 2129862591, 1286577839, 2028776637, 2091583730, 2087209709, 1638646442, 869251306, 241709899, 1747031448, 1511636664, 1711999127, 983598356, 1019765370, 687405323, 297737844, 257138559, 467599779, 998062456, 172439548, 1629062267, 715533125, 290286966, 417631819, 424218507, 1721965851, 1103325765, 1957071511, 259254706, 1537860726, 705326891, 524781644, 1707117195, 1807613669, 1624525273, 1851088584, 509737077, 332667776, 1824071405, 1408666800, 1064704490, 35808977, 1347680401, 680558317, 1292798449, 802777952, 1122917696, 740363591, 741671338, 1870016730, 942624937, 1390732956, 1551599879, 989783005, 149307564, 780551868, 1765392538, 621146211, 550535297, 1462431716, 2065413768, 1357125832, 1228936184, 737018326, 456906909, 416854905, 552905946, 1614932113, 1103672698, 742906171, 845405295, 889207986, 1146117865, 2143350293, 691772185, 204541799, 643194705, 2020904668, 1849321502, 1936768012, 1190548548, 199724377, 1470784387, 972224868, 790913078, 597771544, 285271059, 1980990581, 1992148297, 1710109392, 1803168639, 1188060928, 1580145475, 221534314, 1143011999, 2098150299, 1947906721, 1566939056, 1135339479, 1187991917, 960550597, 2071252371, 639007125, 1694658950, 1377091914, 1207244824, 1224353526, 1331419096, 134492280, 1222070497, 277577864, 1972425174, 1235530451, 892364372, 1038213930, 1257174184, 1473829326, 833871210, 301217552, 292371720, 129017245, 2142791190, 765156579, 1643196, 275487784, 399576143, 1746078469, 328583600, 1874337051, 1524903868, 352058610, 2113198767, 1664263450, 1909591035, 753825474, 118926782, 2120274450, 1187986319, 1717190346, 2074570773, 588192427, 1899249508, 803295075, 1548292027, 1278560985, 1397339391, 866951874, 1748178621, 410318738, 841581894, 546216710, 1210236938, 168180634, 1288173033, 406628433, 1803632622, 832188282, 87828332, 1101131533, 399235625, 763342479, 1426991571, 1835454544, 1898512300, 2102270782, 323580393, 1298486874, 1951354351, 1705178181, 66394412, 1811982139, 18278897, 842673453, 1090515544, 240500626, 1473990861, 1408654299, 2068126862, 371054448, 702240758, 460123462, 1336827681, 1778316122, 1336325903, 1885057859, 1531197438, 588071789, 335811945, 506477949, 1171269301, 1015550620, 321926426, 1788776320, 1010064936, 696723477, 2105963958, 743171572, 711239375, 1736023235, 2066516141, 1307270374, 1000266661, 1780827884, 1474220353, 1492478274, 314444722, 1583742457, 2014874146, 528496477, 1256843830, 1717442646, 321546919, 1842225327, 1796527983, 1211999600, 1376003499, 721980062, 1062562823, 1583089115, 1142995970, 1215340661, 1053626654, 2084021142, 952843415, 741636723, 706465519, 1646898278, 1248930852, 2016306176, 368712737, 894947422, 2106683020, 104665851, 974395308, 1489774208, 1755982808, 113164846, 1112422246, 1337686398, 871746252, 1059471587, 1456608554, 973364889, 1584315173, 230697360, 776119459, 1056282795, 1930652018, 2108658093, 1205975994, 898656576, 157243020, 906798246, 1843754906, 753111518, 2080631988, 1443150828, 291154012, 619046757, 1488669767, 2097325607, 1901727060, 1417902481, 758704672, 1113517958, 967363575, 1786671261, 2069854602, 520297782, 1303980903, 880075522, 1604402144, 971501040, 1795636893, 1273955678, 526872516, 1300615597, 429770546, 552416879, 338639352, 1901062773, 1439316682, 1646496062, 1582694876, 1648691285, 1464562974, 218664792, 905239428, 1839673967, 1597325476, 1832338743, 139082101, 270626603, 1459322844, 394273472, 648724477, 858561932, 54157625, 797143526, 1818604588, 629100957, 1618847659, 2129603948, 1360470130, 2128725514, 1579135429, 1838991815, 2083088599, 1258165450, 1274644880, 502229537, 376023249, 584452346, 363325163, 1327047546, 992859333, 1149959110, 2117971613, 1870008297, 423704861, 1245269632, 1341855737, 504763393, 1413189890, 435172306, 2108244780, 1610242127, 716213942, 459774480, 288139815, 1234802943, 1751732113, 790702247, 157120035, 1477348766, 1932973462, 1665032883, 920347605, 419810041, 1015300274, 1000677548, 1157857328, 2033492261, 1530995088, 774681407, 1544071122, 754489240, 1286070299, 1000415547, 672420620, 1977043317, 879349649, 1888424610, 904124561, 1007715301, 92940865, 1679956704, 1882124474, 1097902240, 910872289, 554185752, 1961288563, 1882158732, 1856059790, 1466457497, 1521117894, 235371132, 123196000, 1822912367, 1681978370, 1660193305, 1877429161, 1293243670, 1647348103, 676055774, 1138059723, 1976435018, 1680625457};
            List<Integer> list = new ArrayList<>(cap);
            list.addAll(Arrays.asList(data));
            return list;
        }
    }

    @Test
    public void test() {
        Assert.expectTrue(list.size() == 1000);
        Assert.expectTrue(map.size() == 1000);
        for (int i = 0; i < list.size(); i++) {
            Integer k = list.get(i);
            Assert.expectTrue(map.get(k).equals(k));
        }

        int i = 0;
        for (map.scan(); map.hasNext(); ) {
            i++;
            Integer k = map.key();
            Integer v = map.value();
            Assert.expectTrue(k.equals(v));
            Assert.expectTrue(list.contains(k));
        }
        Assert.expectTrue(i == list.size());

        int size = list.size();
        for (int j = 0; j < list.size(); j++) {
            _test_remove(list.get(j));
        }
        Assert.expectTrue(map.size() == 0);
    }

    void _test_remove(Integer k) {
        Object mv = map.remove(k);
        Assert.expectTrue(mv != null);
    }

    @Test
    public void testBigMap() {
        int                   count   = 1024 * 1024;
        IntMap<Integer>       map     = new IntMap<>(count);
        Map<Integer, Integer> javaMap = new HashMap<>();
        Random                random  = new Random();
        for (int i = 0; i < count; i++) {
            Integer v = random.nextInt(Integer.MAX_VALUE);
            map.put(v, v);
            javaMap.put(v, v);
        }
        int map_count = 0;
        for (map.scan(); map.hasNext(); ) {
            map_count++;
        }
        logger.info("map_count: {}, javaMap_count: {}", map_count, javaMap.size());
        Assert.expectTrue(map_count == javaMap.size());
    }


}
